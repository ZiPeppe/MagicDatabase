// <auto-generated />
using MagicCardsAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicDatabase.Migrations
{
    [DbContext(typeof(MagicCardsContext))]
    [Migration("20250108082513_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MagicDatabase.Card", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardId"));

                    b.Property<int>("CardArtTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CardCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CardLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("CardName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("CardRarityId")
                        .HasColumnType("int");

                    b.Property<int>("CardStatusId")
                        .HasColumnType("int");

                    b.HasKey("CardId");

                    b.HasIndex("CardArtTypeId");

                    b.HasIndex("CardCategoryId");

                    b.HasIndex("CardLanguageId");

                    b.HasIndex("CardRarityId");

                    b.HasIndex("CardStatusId");

                    b.ToTable("Cards", (string)null);
                });

            modelBuilder.Entity("MagicDatabase.CardArtType", b =>
                {
                    b.Property<int>("CardArtTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardArtTypeId"));

                    b.Property<string>("CardArtTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CardArtTypeId");

                    b.ToTable("CardArtType", (string)null);
                });

            modelBuilder.Entity("MagicDatabase.CardCategory", b =>
                {
                    b.Property<int>("CardCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardCategoryId"));

                    b.Property<string>("CardCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CardCategoryId");

                    b.ToTable("CardCategory", (string)null);
                });

            modelBuilder.Entity("MagicDatabase.CardLanguage", b =>
                {
                    b.Property<int>("CardLanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardLanguageId"));

                    b.Property<string>("CardLanguageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CardLanguageId");

                    b.ToTable("CardLanguage", (string)null);
                });

            modelBuilder.Entity("MagicDatabase.CardRarity", b =>
                {
                    b.Property<int>("CardRarityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardRarityId"));

                    b.Property<string>("CardRarityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CardRarityId");

                    b.ToTable("CardRarity", (string)null);
                });

            modelBuilder.Entity("MagicDatabase.CardStatus", b =>
                {
                    b.Property<int>("CardStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardStatusId"));

                    b.Property<string>("CardStatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CardStatusId");

                    b.ToTable("CardStatus", (string)null);
                });

            modelBuilder.Entity("MagicDatabase.Card", b =>
                {
                    b.HasOne("MagicDatabase.CardArtType", "CardArtType")
                        .WithMany()
                        .HasForeignKey("CardArtTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MagicDatabase.CardCategory", "CardCategory")
                        .WithMany("Cards")
                        .HasForeignKey("CardCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MagicDatabase.CardLanguage", "CardLanguage")
                        .WithMany()
                        .HasForeignKey("CardLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MagicDatabase.CardRarity", "CardRarity")
                        .WithMany()
                        .HasForeignKey("CardRarityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MagicDatabase.CardStatus", "CardStatus")
                        .WithMany()
                        .HasForeignKey("CardStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardArtType");

                    b.Navigation("CardCategory");

                    b.Navigation("CardLanguage");

                    b.Navigation("CardRarity");

                    b.Navigation("CardStatus");
                });

            modelBuilder.Entity("MagicDatabase.CardCategory", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
